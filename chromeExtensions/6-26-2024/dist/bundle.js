(()=>{"use strict";console.log("Background script started"),chrome.runtime.onMessage.addListener((async(e,n,o)=>{if(e.text){console.log("Received text:",e.text);const n=await async function(e){try{console.log(`Fetching meaning for: ${e}`);const n=`https://wordsapiv1.p.rapidapi.com/words/${e}/definitions`,o={method:"GET",headers:{"X-RapidAPI-Key":"bbefc77f9amshfbdea7c855bec97p1cc15ejsn84119bf1c3ed","X-RapidAPI-Host":"wordsapiv1.p.rapidapi.com"}},i=await fetch(n,o),t=await i.json();if(console.log("API response:",t),t.definitions&&t.definitions.length>0){const e=t.definitions[0].definition;return console.log("Definition found:",e),e}return console.log("Definition not found."),"Definition not found."}catch(e){return console.error("Error getting meaning:",e),"Sorry, an error occurred while getting the definition. Please try again."}}(e.text);console.log("Sending response:",n),o({meaning:n})}else o({meaning:"No text provided."});return!0}))})();